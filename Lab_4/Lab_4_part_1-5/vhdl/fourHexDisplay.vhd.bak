LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity	fourHexDisplay IS
PORT ( 
					input1		: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
					input2		: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
					clk 			: IN STD_LOGIC;
					reset 			: IN STD_LOGIC;
					out1	: OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
					out2	: OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
					out3	: OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
					out4	: OUT STD_LOGIC_VECTOR(6 DOWNTO 0)
		);
END fourHexDisplay;

ARCHITECTURE Structural OF fourHexDisplay IS

	component fourBitReg IS
		PORT ( 
					input		: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
					clk 		: IN STD_LOGIC;
					output	: OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
		);
	end component;
	
	component hex2sevenSeg IS
	PORT ( 
					hex_in		: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
					sevenSeg	: OUT STD_LOGIC_VECTOR(6 DOWNTO 0)
		);
	end component;

	signal stored_input1, stored_input2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
BEGIN

	reg1 : fourBitReg PORT MAP (
			input 				=>  <<fill_in_here>>,
			clk					=> <<fill_in_here>>,
			output 				=>  <<fill_in_here>> 
        );

	-- add more registers (as per diagram)...

   hex1 : hex2sevenSeg PORT MAP (
			hex_in 				=> <<fill_in_here>>,
			sevenSeg 			=> <<fill_in_here>>
        );   
	-- add more hex decoders (as per diagram)...

	
END Structural;