|seq_detect
reset => next_state:a.reset
w => next_state:a.w
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
states[0] << state[0].DB_MAX_OUTPUT_PORT_TYPE
states[1] << state[1].DB_MAX_OUTPUT_PORT_TYPE
states[2] << state[2].DB_MAX_OUTPUT_PORT_TYPE
states[3] << state[3].DB_MAX_OUTPUT_PORT_TYPE
outs << outputsig:b.my_out


|seq_detect|next_state:a
state[0] => Mux0.IN35
state[0] => Mux1.IN35
state[0] => Mux2.IN35
state[0] => Mux3.IN35
state[1] => Mux0.IN34
state[1] => Mux1.IN34
state[1] => Mux2.IN34
state[1] => Mux3.IN34
state[2] => Mux0.IN33
state[2] => Mux1.IN33
state[2] => Mux2.IN33
state[2] => Mux3.IN33
state[3] => Mux0.IN32
state[3] => Mux1.IN32
state[3] => Mux2.IN32
state[3] => Mux3.IN32
w => Mux0.IN36
w => Mux1.IN36
w => Mux2.IN36
w => Mux3.IN36
reset => next_state.OUTPUTSELECT
reset => next_state.OUTPUTSELECT
reset => next_state.OUTPUTSELECT
reset => next_state.OUTPUTSELECT
next_state[0] <= next_state.DB_MAX_OUTPUT_PORT_TYPE
next_state[1] <= next_state.DB_MAX_OUTPUT_PORT_TYPE
next_state[2] <= next_state.DB_MAX_OUTPUT_PORT_TYPE
next_state[3] <= next_state.DB_MAX_OUTPUT_PORT_TYPE


|seq_detect|outputsig:b
state[0] => Equal0.IN7
state[0] => Equal1.IN7
state[1] => Equal0.IN6
state[1] => Equal1.IN6
state[2] => Equal0.IN5
state[2] => Equal1.IN5
state[3] => Equal0.IN4
state[3] => Equal1.IN4
my_out <= process_0.DB_MAX_OUTPUT_PORT_TYPE


